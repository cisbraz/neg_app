unit Menu;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Menus, System.ImageList,
  Vcl.ImgList, Vcl.StdCtrls, Vcl.ComCtrls, Vcl.AppEvnts;

type
  TuFrmMenu = class(TForm)
    imgOpcao: TImageList;
    pgcMenu: TPageControl;
    tbsCadastro: TTabSheet;
    tbsNegociacao: TTabSheet;
    btnProduto: TButton;
    btnProdutor: TButton;
    btnDistribuidor: TButton;
    Button4: TButton;
    Button5: TButton;
    Button1: TButton;
    procedure btnProdutoClick(Sender: TObject);
    procedure btnProdutorClick(Sender: TObject);
    procedure btnDistribuidorClick(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure Button5Click(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  uFrmMenu: TuFrmMenu;

implementation

{$R *.dfm}

uses Produtor, Funcoes, Persistencia, Produto, Distribuidor, Negociacao,
  GerenciamentoNegociacao;

procedure TuFrmMenu.btnDistribuidorClick(Sender: TObject);
begin
  ShowChild('uFrmDistribuidor');
end;

procedure TuFrmMenu.btnProdutoClick(Sender: TObject);
begin
  ShowChild('uFrmProduto');
end;

procedure TuFrmMenu.btnProdutorClick(Sender: TObject);
begin
  ShowChild('uFrmProdutor');
end;

procedure TuFrmMenu.Button1Click(Sender: TObject);
var
  arq: TextFile;
  i, n: integer;
  dirEXE : string;
begin
  dirEXE := IncludeTrailingPathDelimiter(ExtractFileDir(Application.ExeName));
  if (not FileExists(dirEXE + 'LogCommitsNegociacao.txt')) then begin
    AssignFile(arq, dirEXE + 'LogCommitsNegociacao.txt');
  end;

  try
    Rewrite(arq); { [ 2 ] Cria o arquivo texto "tabuada.txt" na unidade de disco "d" }

    n := StrToInt(Edit1.Text);

    Writeln(arq, '+--Resultado--+'); { [ 8 ] Grava uma linha no arquivo }
    for i:=1 to 10 do
    begin
{ [ 8 ] Grava uma linha da tabuada no arquivo }
      Writeln(arq, '| ', i:2, ' X ', n, ' = ', (i*n):2, ' |');
    end;
    Writeln(arq, '+-------------+'); { [ 8 ] Grava uma linha no arquivo }

    CloseFile(arq); { [ 8 ] Fecha o arquivo texto "tabuada.txt". }

    ShowMessage('Tabuada gravada com sucesso em "d:\tabuada.txt".');
  except
  end;
end;

procedure TuFrmMenu.Button4Click(Sender: TObject);
begin
  ShowChild('uFrmNegociacao');
end;

procedure TuFrmMenu.Button5Click(Sender: TObject);
begin
  ShowChild('uFrmGerenciamentoNegociacao');
end;

procedure TuFrmMenu.FormShow(Sender: TObject);
begin
  pgcMenu.ActivePage := tbsCadastro;
end;

initialization
  RegisterClasses([TuFrmProdutor,
                   TuFrmProduto,
                   TuFrmDistribuidor,
                   TuFrmNegociacao,
                   TuFrmGerenciamentoNegociacao]);

finalization
  UnRegisterClasses([TuFrmProdutor,
                     TuFrmProduto,
                     TuFrmDistribuidor,
                     TuFrmNegociacao,
                     TuFrmGerenciamentoNegociacao]);

end.
